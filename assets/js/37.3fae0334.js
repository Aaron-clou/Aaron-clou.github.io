(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{523:function(e,a,t){"use strict";t.r(a);var n=t(18),v=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),t("p",[t("code",[e._v("Dafny")]),e._v("是一种旨在简化编写正确代码的语言。这意味着不存在任何运行时的错误，同时在实际做程序员希望它做的事情上也是正确的。为了实现这一点，"),t("code",[e._v("Dafny")]),e._v("依赖于高级注释来推理和证明代码的正确性。一段代码的效果可以抽象地给出，使用期望行为的自然、高级表达式，这更容易编写，也更不容易出错。"),t("code",[e._v("Dafny")]),e._v("然后生成代码与注释匹配的证明(当然，假设它们是正确的!)。"),t("code",[e._v("Dafny")]),e._v("将编写无bug的代码的"),t("Badge",{attrs:{text:"负担",vertical:"middle"}}),e._v("变成了编写无bug的"),t("Badge",{attrs:{text:"注释",vertical:"middle"}}),e._v("。这通常比编写代码更容易，因为注释更短、更直接。例如，"),t("code",[e._v("Dafny")]),e._v("中下面的注释片段表示数组中的每个元素都是严格正的:")],1),e._v(" "),t("div",{staticClass:"language-dafny line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("forall k: int :: 0 <= k < a.Length ==> 0 < a[k]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这意味着对于数组中所有的索引为"),t("code",[e._v("k")]),e._v("的整数，索引处的值大于0。通过编写这些注释，可以确信代码是正确的。此外，编写注释的行为可以帮助人们在更深的层次上理解代码正在做什么。\n除了证明与用户提供的注释的对应关系外，"),t("code",[e._v("Dafny")]),e._v("还证明没有运行时错误，比如索引越界、空解引用、除零等。这是一个强有力的保证，是使用"),t("code",[e._v("Dafny")]),e._v("和类似工具的一个强有力的例子。"),t("code",[e._v("Dafny")]),e._v("也证明了代码的终止，除了在特殊指定的循环中。\n让我们开始编写一些"),t("code",[e._v("Dafny")]),e._v("程序。")])])}),[],!1,null,null,null);a.default=v.exports}}]);