(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{550:function(s,e,a){"use strict";a.r(e);var n=a(18),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"style-guide-for-dafny-programmers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#style-guide-for-dafny-programmers"}},[s._v("#")]),s._v(" Style Guide for Dafny Programmers")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny",target:"_blank",rel:"noopener noreferrer"}},[s._v("Dafny 文档"),a("OutboundLink")],1)]),s._v(" "),a("ul",[a("li",[s._v("命名约定\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#method-prefix",target:"_blank",rel:"noopener noreferrer"}},[s._v("方法前缀"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[s._v("代码布局\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#braces",target:"_blank",rel:"noopener noreferrer"}},[s._v("Braces"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#imports",target:"_blank",rel:"noopener noreferrer"}},[s._v("Imports"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[s._v("缩进和换行\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#tabs-or-spaces",target:"_blank",rel:"noopener noreferrer"}},[s._v("制表符还是空格？"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#maximum-character-limit",target:"_blank",rel:"noopener noreferrer"}},[s._v("最大字符限制"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#newlines",target:"_blank",rel:"noopener noreferrer"}},[s._v("换行符"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#functions-methods-predicates-and-lemmas",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数、方法、谓词和引理"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[s._v("需要避免的事情\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#parentheses",target:"_blank",rel:"noopener noreferrer"}},[s._v("括号"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("空格\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#type-declaration",target:"_blank",rel:"noopener noreferrer"}},[s._v("类型声明"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#function-method-predicate-and-lemma-declaration",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数、方法、谓词和引理声明"),a("OutboundLink")],1)])])])])]),s._v(" "),a("li",[s._v("建议\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#externs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Externs"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dafny-lang.github.io/dafny/StyleGuide/Style-Guide#things-to-consider",target:"_blank",rel:"noopener noreferrer"}},[s._v("需要考虑的事项"),a("OutboundLink")],1)])])])]),s._v(" "),a("p",[s._v("本样式指南提供了 Dafny 代码的编码约定。")]),s._v(" "),a("p",[a("em",[s._v("此文档仍在进行中。 请随时添加更多建议。")])]),s._v(" "),a("h2",{attrs:{id:"命名约定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名约定"}},[s._v("#")]),s._v(" 命名约定")]),s._v(" "),a("p",[s._v("任何"),a("strong",[s._v("变量")]),s._v("都以"),a("code",[s._v("camelCase")]),s._v("命名。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var minValue := 1;\nvar cipherMessage := "Hello World";\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("任何"),a("strong",[s._v("引理")]),s._v("、"),a("strong",[s._v("谓词")]),s._v("、"),a("strong",[s._v("函数")]),s._v("、"),a("strong",[s._v("方法")]),s._v("、"),a("strong",[s._v("类")]),s._v("、"),a("strong",[s._v("模块")]),s._v("、"),a("strong",[s._v("数据类型")]),s._v("和"),a("strong",[s._v("新类型")]),s._v("都以"),a("code",[s._v("PascalCase")]),s._v("命名。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("method FindIndex(arr: seq<int>, k: int)\n    ...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("任何静态或全局 "),a("strong",[s._v("常量")]),s._v(" 都以 "),a("code",[s._v("UPPERCASE_WITH_UNDERSCORES")]),s._v(" 命名。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("static const MONTHS_IN_A_YEAR := 12\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"前缀方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前缀方法"}},[s._v("#")]),s._v(" 前缀方法")]),s._v(" "),a("p",[s._v("当变量或方法位于类/模块中时，避免使用冗余名称。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Integer {\n\n    // The following method converts the given integer\n    // to a string.\n    //\n    // this method name can be simplified to ToString()\n    // so that the method call is Integer.ToString(i)\n    // instead of Integer.IntegerToString(i).\n\n    // YES\n    method ToString(i: int) returns (s: string)\n        ...\n\n    // NO\n    method IntegerToString(i: int) returns (s: string)\n        ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"代码布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码布局"}},[s._v("#")]),s._v(" 代码布局")]),s._v(" "),a("h3",{attrs:{id:"braces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#braces"}},[s._v("#")]),s._v(" Braces")]),s._v(" "),a("p",[s._v("默认情况下，左大括号在同一行。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module M {\n    ...\n    method Met() {\n        ...\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果方法（或函数、引理等）签名太长而不能放在一行中，或者如果签名至少有一个规范子句，则左大括号将换行。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module M {\n    ...\n    method Met(i: int) returns (j: int)\n        requires i % 2 == 0\n        ensures j > 10\n    {\n        ...\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这适用于每个范围："),a("code",[s._v("module")]),s._v("、"),a("code",[s._v("class")]),s._v("、"),a("code",[s._v("predicate")]),s._v("、"),a("code",[s._v("if")]),s._v("、"),a("code",[s._v("while")]),s._v(" 等等。")]),s._v(" "),a("h3",{attrs:{id:"imports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imports"}},[s._v("#")]),s._v(" Imports")]),s._v(" "),a("p",[s._v("默认情况下，导入模块而不打开它们。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import Coffee\n...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("但是，如果某个模块的某些成员非常频繁地使用，请使用 "),a("code",[s._v("opened")]),s._v(" 导入它：")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import opened Donut\n...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当一个文件使用两个模块并且它们都定义同名的方法时，不要将它们导入 "),a("code",[s._v("opened")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import MyModule\nimport YourModule\n...\nmethod MyMethod() {\n    MyModule.foo();\n    YourModule.foo();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在这种情况下，如果要缩短模块名称，请使用简写名称导入。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import M = MyModuleWithACumbersomeName\nimport Y = YourModuleWithACumbersomeName\n...\nmethod MyMethod() {\n    M.foo();\n    Y.foo();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("常见的导入，例如 "),a("code",[s._v("StandardLibrary")]),s._v(" 和 "),a("code",[s._v("Native")]),s._v("，应该组合在一起，然后是自定义模块导入，中间有一个空行。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import opened StandardLibrary\nimport opened Native\n\nimport opened Donut\nimport Coffee\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("虽然不是必需的，但建议保持 "),a("code",[s._v("import")]),s._v("s 和 "),a("code",[s._v("include")]),s._v("s 的字母顺序，除非将它们按逻辑分组更有意义。")]),s._v(" "),a("h2",{attrs:{id:"缩进和换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩进和换行"}},[s._v("#")]),s._v(" 缩进和换行")]),s._v(" "),a("h3",{attrs:{id:"制表符还是空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#制表符还是空格"}},[s._v("#")]),s._v(" 制表符还是空格?")]),s._v(" "),a("p",[s._v("空格优于制表符。 选项卡只能用于与包含选项卡的现有代码保持一致。")]),s._v(" "),a("p",[s._v("每个缩进使用 2 个空格。")]),s._v(" "),a("h3",{attrs:{id:"最大字符限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大字符限制"}},[s._v("#")]),s._v(" 最大字符限制")]),s._v(" "),a("p",[s._v("虽然没有特别的严格要求，但一般建议每行最多 120 个字符。")]),s._v(" "),a("h3",{attrs:{id:"换行符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换行符"}},[s._v("#")]),s._v(" 换行符")]),s._v(" "),a("p",[s._v("在连续的"),a("strong",[s._v("函数")]),s._v("、"),a("strong",[s._v("方法")]),s._v("、"),a("strong",[s._v("谓词")]),s._v("和"),a("strong",[s._v("引理")]),s._v("之间使用换行符，提高代码可读性。")]),s._v(" "),a("p",[s._v("以换行符结束每个文件。")]),s._v(" "),a("h3",{attrs:{id:"函数、方法、谓词和引理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数、方法、谓词和引理"}},[s._v("#")]),s._v(" 函数、方法、谓词和引理")]),s._v(" "),a("p",[s._v("每个 Dafny 方法都有以下签名。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("method {:<attributes>} MethodName(param1: Type, param2: Type) returns (ret: Type)\n    requires P()\n    modifies param2\n    ensures Q()\n    decreases param1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("如果可能，将 "),a("code",[s._v("MethodName")]),s._v(" 和 "),a("code",[s._v("returns")]),s._v(" 语句放在同一行，因为关键字 "),a("code",[s._v("returns")]),s._v(" 与其他方法规范子句不同，例如 "),a("code",[s._v("requires")]),s._v("、"),a("code",[s._v("modifies")]),s._v("、"),a("code",[s._v("ensures")]),s._v(" 和 "),a("code",[s._v("decreases")]),s._v(" ，应该按这个顺序出现。 每个方法规范子句应该在单独的行上，缩进。")]),s._v(" "),a("p",[s._v("如果 Method 签名太长，我们可以将其分解。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("method {:<attributes>} MethodName(param1: Type, param2: Type,\n        param3: Type, param4: Type, param5: Type)\n    returns (ret1: Type, ret2: Type, ret3: Type, ret4: Type,\n        ret5: Type)\n    requires P1()\n    requires P2()\n    requires P3()\n    modifies param2\n    modifies param3\n    ensures Q1()\n    ensures Q2()\n    decreases param1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("多个 "),a("code",[s._v("requires")]),s._v(" 或 "),a("code",[s._v("ensures")]),s._v(" 可以合并为一个：")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("requires\n    && P1()\n    && P2()\n    && P3()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("相同的规则适用于 "),a("code",[s._v("function")]),s._v("、"),a("code",[s._v("predicate")]),s._v(" 和 "),a("code",[s._v("lemma")]),s._v(" 定义。")]),s._v(" "),a("h2",{attrs:{id:"需要避免的事情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要避免的事情"}},[s._v("#")]),s._v(" 需要避免的事情")]),s._v(" "),a("h3",{attrs:{id:"括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#括号"}},[s._v("#")]),s._v(" 括号")]),s._v(" "),a("p",[s._v("在许多情况下，Dafny 不需要在表达式周围加上括号。 这里有些例子。")]),s._v(" "),a("ul",[a("li",[s._v("If-Else-While 语句")])]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nvar i := 1;\nwhile i < 10 {\n    ...\n    if 1 < i {\n        ...\n    }\n    ...\n}\n\n// NO\nvar i := 1;\nwhile (i < 10) {\n    ...\n    if (1 < i) {\n        ...\n    }\n    ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("带有表达式参数的语句")])]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nassert x < 100;\nprint x;\n\n// NO\nassert(x < 100);\nprint(x);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("简单的布尔/算术表达式")])]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nmethod Collatz(num: nat)\n    decreases *\n{\n    var n := num;\n    while 1 < n\n        decreases *\n    {\n        n := if n % 2 == 0 then n / 2 else n * 3 + 1;\n    }\n}\n\n// NO\nmethod Collatz(num: nat)\n    decreases *\n{\n    var n := num;\n    while (1 < n) // unnecessary parentheses\n        decreases *\n    {\n        n := if ((n % 2) == 0) then (n / 2) else ((n * 3) + 1); // unnecessary parentheses\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空格"}},[s._v("#")]),s._v(" 空格")]),s._v(" "),a("p",[s._v("避免表达式中不必要的空格。")]),s._v(" "),a("h4",{attrs:{id:"类型声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型声明"}},[s._v("#")]),s._v(" 类型声明")]),s._v(" "),a("p",[s._v("类型声明应该具有"),a("code",[s._v("variableName: variableType")]),s._v("的形式。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nconst one: int := 1\nclass {:extern} Util {\n    var {:extern} Exception: System.String\n}\n\n// NO\nconst one : int := 1 // unnecessary whitespace\nclass {:extern} Util {\n    var {:extern} Exception : System.String // unnecessary whitespace\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("如果 Dafny 可以推断出该类型，请将其省略，除非您认为它在程序中提供了有用的文档。 所以，上面的常量 "),a("code",[s._v("one")]),s._v(" 最好声明为")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const one := 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"函数、方法、谓词和引理声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数、方法、谓词和引理声明"}},[s._v("#")]),s._v(" 函数、方法、谓词和引理声明")]),s._v(" "),a("p",[a("code",[s._v("function")]),s._v("、"),a("code",[s._v("method")]),s._v("、"),a("code",[s._v("predicate")]),s._v(" 和 "),a("code",[s._v("lemma")]),s._v(" 定义应该具有 "),a("code",[s._v("FunctionName(parameterName: parameterType, ...)")]),s._v(" 的形式。")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nfunction method Foo<int>(i: int): int\n\n// NO\nfunction method Foo<int> (i : int) : int // unnecessary whitespace\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Avoid too little or too much whitespace that reduces the overall readability.")]),s._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// YES\nlemma MyLemma<A, B>(x: seq<seq<A>>, y: B) {\n    ...\n}\n\n// NO\nlemma MyLemma <A,B> ( x : seq<seq<A>> , y :B){\n    ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[s._v("#")]),s._v(" 建议")]),s._v(" "),a("p",[s._v("本节描述了一些建议，这些建议可以帮助使代码更具可读性和易于遵循，尽管没有严格执行。")]),s._v(" "),a("h3",{attrs:{id:"externs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externs"}},[s._v("#")]),s._v(" Externs")]),s._v(" "),a("p",[s._v("尽可能在 Dafny 和目标语言（例如 C#、Java 等）中将它们命名为相同的名称，这样在 Dafny 中我们只需编写 "),a("code",[s._v("{:extern}")]),s._v("，而不是 "),a("code",[s._v('{:extern "<name>"}')]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"需要考虑的事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要考虑的事项"}},[s._v("#")]),s._v(" 需要考虑的事项")]),s._v(" "),a("p",[s._v("在 Dafny 中设计/实施程序之前思考这些问题。")]),s._v(" "),a("ul",[a("li",[s._v("这个变量名/函数名"),a("code",[s._v("X")]),s._v("是个好名字吗？")]),s._v(" "),a("li",[s._v("这个方法"),a("code",[s._v("M")]),s._v("在模块"),a("code",[s._v("X")]),s._v("中有意义吗？ 它不应该在模块 "),a("code",[s._v("Y")]),s._v(" 中吗？")]),s._v(" "),a("li",[s._v("定义"),a("code",[s._v("X")]),s._v("是否属于文件"),a("code",[s._v("Y.dfy")]),s._v("？")]),s._v(" "),a("li",[a("code",[s._v("X.dfy")]),s._v(" 是一个好的文件名吗？")])])])}),[],!1,null,null,null);e.default=t.exports}}]);