(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{515:function(s,a,t){"use strict";t.r(a);var e=t(18),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"声明-statement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明-statement"}},[s._v("#")]),s._v(" "),t("strong",[s._v("声明 Statement")])]),s._v(" "),t("p",[s._v("以下是 Dafny 中最常见语句:")]),s._v(" "),t("div",{staticClass:"language-dafny line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var LocalVariables := ExprList;\n Lvalues := ExprList;\n assert BoolExpr;\n print ExprList;\n if BoolExpr0 {\n  Stmts0\n } else if BoolExpr1 {\n  Stmts1\n } else {\n  Stmts2\n }\n\n while BoolExpr\n\n  invariant Inv\n\n  modifies Frame\n\n  decreases Rank\n\n {\n  Stmts\n }\n\nmatch Expr {\n  case Empty => Stmts0\n  case Node(l, d, r) => Stmts1\n}\n\n break;\n return;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h2",{attrs:{id:"函数-方法的返回值赋值给变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数-方法的返回值赋值给变量"}},[s._v("#")]),s._v(" "),t("strong",[s._v("函数/方法的返回值赋值给变量")])]),s._v(" "),t("p",[s._v("(就是将函数/方法返回的值或对象 赋给 一个 局部变量 而已）")]),s._v(" "),t("p",[t("code",[s._v("var LocalVariables := ExprList;")])]),s._v(" "),t("p",[s._v("var 语句引入了局部变量。")]),s._v(" "),t("p",[t("code",[s._v("Lvalues := ExprList;")]),s._v("\n赋值语句将 "),t("code",[s._v("ExprList")]),s._v("变量赋给"),t("code",[s._v("Lvalue")]),s._v("s。 这些分配是并行执行的（更重要的是，所有必要的读取都发生在写入之前），因此左侧必须表示不同的 L 值。 每个右侧都可以是以下形式之一的表达式或对象创建：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("new T")])]),s._v(" "),t("li",[t("p",[s._v("new T.Init(ExprList)")])]),s._v(" "),t("li",[t("p",[s._v("new T(ExprList)")])]),s._v(" "),t("li",[t("p",[s._v("new T[SizeExpr]")])]),s._v(" "),t("li",[t("p",[s._v("new T[SizeExpr0, SizeExpr1]")])])]),s._v(" "),t("p",[s._v("第一种形式分配一个类型为 "),t("code",[s._v("T")]),s._v(" 的对象。")]),s._v(" "),t("p",[s._v("第二种形式另外在新分配的对象上调用初始化方法或构造函数。")]),s._v(" "),t("p",[s._v("第三种形式是当调用匿名构造函数时的语法。")]),s._v(" "),t("p",[s._v("其他形式分别了"),t("code",[s._v("T")]),s._v("是一维和二维数组对象的匿名构造方法")]),s._v(" "),t("h2",{attrs:{id:"assert-声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assert-声明"}},[s._v("#")]),s._v(" "),t("strong",[s._v("assert 声明")])]),s._v(" "),t("p",[t("code",[s._v("assert")]),s._v(" 语句判断后面的表达式结果是否为真（由验证器验证）。")]),s._v(" "),t("h2",{attrs:{id:"print-打印语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#print-打印语句"}},[s._v("#")]),s._v(" "),t("strong",[s._v("print 打印语句")])]),s._v(" "),t("p",[s._v("打印语句将给定打印表达式的值输出到标准输出。字符串中的字符可以转义；例如，对 "),t("code",[s._v("print")]),s._v(" 语句感兴趣的是 "),t("code",[s._v("\\n")]),s._v(" 表示字符串中的换行符。")]),s._v(" "),t("h2",{attrs:{id:"if-选择语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-选择语句"}},[s._v("#")]),s._v(" "),t("strong",[s._v("if 选择语句")])]),s._v(" "),t("p",[t("code",[s._v("if")]),s._v(" 语句是通常的语句。该示例显示了使用 "),t("code",[s._v("else if")]),s._v(" 将备选方案串在一起。像往常一样，"),t("code",[s._v("else")]),s._v(" 分支是可选的。")]),s._v(" "),t("h2",{attrs:{id:"while-循环语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while-循环语句"}},[s._v("#")]),s._v(" "),t("strong",[s._v("while 循环语句")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("while")]),s._v(" 语句是通常的循环，其中")]),s._v(" "),t("li",[t("code",[s._v("invariant")]),s._v(" 声明给出了一个循环变量")]),s._v(" "),t("li",[t("code",[s._v("modifies")]),s._v(" 语句限制了循环的框架")]),s._v(" "),t("li",[t("code",[s._v("reduction")]),s._v(" 语句从循环中引入了一个变体函数。")])]),s._v(" "),t("p",[s._v("默认情况下，循环不变式为真，修改框与封闭上下文中的相同（通常是封闭方法的修改子句），并从循环保护中猜测变体函数。")]),s._v(" "),t("p",[s._v("while BoolExpr //布尔表达式-循环条件\ninvariant Inv\nmodifies Frame\ndecreases Rank\n{\nStatements\n}")]),s._v(" "),t("h2",{attrs:{id:"match语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#match语句"}},[s._v("#")]),s._v(" "),t("strong",[s._v("match语句")])]),s._v(" "),t("p",[t("code",[s._v("match")]),s._v(" 语句计算源"),t("code",[s._v("Expr")]),s._v("（一个类型为归纳数据类型的表达式），然后执行与用于创建源数据类型值的构造函数相对应的 "),t("code",[s._v("case")]),s._v("，将构造函数参数绑定到给定的名称。如果不需要它们来标记 "),t("code",[s._v("match")]),s._v(" 语句的结尾，则可以省略包围 "),t("code",[s._v("case")]),s._v(" 的花括号。")]),s._v(" "),t("h2",{attrs:{id:"break语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#break语句"}},[s._v("#")]),s._v(" "),t("strong",[s._v("break语句")])]),s._v(" "),t("p",[t("code",[s._v("break")]),s._v(" 语句可用于退出循环，而 "),t("code",[s._v("return")]),s._v(" 语句可用于退出方法。")])])}),[],!1,null,null,null);a.default=n.exports}}]);