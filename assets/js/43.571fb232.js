(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{529:function(n,s,a){"use strict";a.r(s);var e=a(18),i=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"终止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#终止"}},[n._v("#")]),n._v(" 终止")]),n._v(" "),a("p",[a("code",[n._v("Dafny")]),n._v("通过使用"),a("strong",[n._v("减")]),n._v("注释证明了代码的终止，即不会永远循环。对于许多事情，"),a("code",[n._v("Dafny")]),n._v("能够猜出正确的注释，但有时需要明确说明。事实上，对于我们到目前为止看到的所有代码，"),a("code",[n._v("Dafny")]),n._v("都能够自己进行这种证明，这就是为什么我们还没有看到显式的"),a("strong",[n._v("减小")]),n._v("注释。"),a("code",[n._v("Dafny")]),n._v("在两个地方证明了终止:循环和递归。这两种情况都需要"),a("code",[n._v("Dafny")]),n._v("明确的注释或正确的猜测。\n"),a("strong",[n._v("减小")]),n._v("注释，顾名思义，为"),a("code",[n._v("Dafny")]),n._v("提供了一个表达式，该表达式在每次循环迭代或递归调用时都会减小。在使用"),a("strong",[n._v("减小")]),n._v("表达式时，"),a("code",[n._v("Dafny")]),n._v("需要验证两个条件:表达式实际上变得更小，以及它是有界的。很多时候，整数值(自然或普通整数)是减少的量，但也可以使用其他东西。(详见参考资料)在整数的情况下，假定边界为零。例如，下面是在循环中正确使用(当然是用它自己的关键字):")]),n._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("method m ()\n{\n   var i := 20;\n   while 0 < i\n      invariant 0 <= i\n      decreases i\n   {\n      i := i - 1;\n   }\n}\n   while 0 < i\n      invariant 0 <= i\n      decreases i\n   {\n      i := i - 1;\n   }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("p",[n._v("这里"),a("code",[n._v("Dafny")]),n._v("拥有证明终止所需的所有条件。变量"),a("code",[n._v("i")]),n._v("在每次循环迭代中都会变小，并且小于0。这很好，除了循环是向后的大多数循环，这往往是向上而不是向下计数。在这种情况下，减少的不是计数器本身，而是计数器与上界之间的距离。下面是一个处理这种情况的简单技巧:")]),n._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("method m()\n{\n   var i, n := 0, 20;\n   while i < n\n      invariant 0 <= i <= n\n      decreases n - i\n   {\n      i := i + 1;\n   }\n}\n   while i < n\n      invariant 0 <= i <= n\n      decreases n - i\n   {\n      i := i + 1;\n   }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("p",[n._v("这实际上是"),a("code",[n._v("Dafny")]),n._v("对这种情况的猜测，因为它看到"),a("code",[n._v("i < n")]),n._v("，并假设"),a("code",[n._v("n - i")]),n._v("是减少的数量。循环不变量的上界意味着"),a("code",[n._v("0 <= n - i")]),n._v("，并给了Dafny一个数量的下界。当"),a("code",[n._v("n")]),n._v("的边界不是常量时，这也适用，例如在二分搜索算法中，两个量彼此接近，且都不是固定的。")]),n._v(" "),a("p",[a("strong",[n._v("练习11.")])]),n._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[n._v("点击查看题目")]),n._v(" "),a("p",[n._v("在上面的循环中，不变量"),a("code",[n._v("i <= n")]),n._v("和循环保护的否定允许我们在循环结束后结束"),a("code",[n._v("i == n")]),n._v("(正如我们之前用"),a("code",[n._v("assert")]),n._v("检查过的那样)。请注意，如果循环守卫被写成"),a("code",[n._v("i != n")]),n._v("(如练习8中所示)，那么无论循环不变量是什么，守卫的否定都会在循环之后立即给出"),a("code",[n._v("i == n")]),n._v("。将循环守卫更改为"),a("code",[n._v("i != n")]),n._v("，并删除不变注释。程序验证了吗?发生了什么事?")])]),n._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("method m()\n{\n   var i, n := 0, 20;\n   while i != n\n      decreases n - i\n   {\n      i := i + 1;\n   }\n}\n   while i != n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[n._v("另一种需要终止证明的情况是递归方法或函数。与无限循环类似，这些方法可能永远调用自己，永远不会返回到它们的原始调用者。当"),a("code",[n._v("Dafny")]),n._v("无法猜出终止条件时，可以给出显式的减小子句以及前置和后置条件，就像对"),a("code",[n._v("fib")]),n._v("函数的不必要注释一样:")]),n._v(" "),a("div",{staticClass:"language-dafny line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function fib(n: nat): nat\n   decreases n\n{\n   if n == 0 then 0 else\n   if n == 1 then 1 else\n                  fib(n - 1) + fib(n - 2)\n}\nfunction fib(n: nat): nat\n   decreases n\n{\n   ...\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("p",[n._v("与前面一样，"),a("code",[n._v("Dafny")]),n._v("可以自己猜测这个条件，但有时递减条件隐藏在对象的某个字段中或其他"),a("code",[n._v("Dafny")]),n._v("自己无法找到的地方，它需要一个显式注释。")])])}),[],!1,null,null,null);s.default=i.exports}}]);