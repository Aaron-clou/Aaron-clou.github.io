(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{512:function(s,n,e){"use strict";e.r(n);var t=e(18),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"函数-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数-function"}},[s._v("#")]),s._v(" "),e("strong",[s._v("函数 function")])]),s._v(" "),e("p",[s._v("函数具有以下形式：")]),s._v(" "),e("div",{staticClass:"language-dafny line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function F(a: A, b: B, c: C): T\n  requires Pre  //前置条件pre\n  reads Frame\t//框架frame\n  ensures Post //后置条件post\n  decreases TerminationMetric //变体函数\n{\n  Body\t//函数体\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("a")]),s._v(", "),e("code",[s._v("b")]),s._v(", "),e("code",[s._v("c")]),s._v(" : 输入的形参，")]),s._v(" "),e("li",[e("code",[s._v("T")]),s._v(" : 返回结果的类型，")]),s._v(" "),e("li",[e("code",[s._v("Pre")]),s._v(": 表示函数前提条件的布尔表达式，")]),s._v(" "),e("li",[e("code",[s._v("Frame")]),s._v(": 函数体body需要的对象列表")]),s._v(" "),e("li",[e("code",[s._v("Post")]),s._v(": 函数的后置条件布尔表达式")]),s._v(" "),e("li",[e("code",[s._v("TerminationMetric")]),s._v(": 变体函数")]),s._v(" "),e("li",[e("code",[s._v("Body")]),s._v(": 定义函数的表达式。")])]),s._v(" "),e("p",[s._v("前置条件允许函数是部分的(只用前置就行不用写后置），即前置条件表示函数何时定义，并且 Dafny 会验证函数的每次使用都满足前置条件。")]),s._v(" "),e("p",[s._v("通常不需要后置条件，因为函数在函数体内已经给出了完整的定义。")]),s._v(" "),e("p",[s._v("例如：")]),s._v(" "),e("p",[s._v("（写个后置加个保险也行，一般后置就是声明该函数的基本属性，比如Factorial这个函数所有数字都≥1）")]),s._v(" "),e("div",{staticClass:"language-dafny line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function Factorial(n: int): int\n requires 0 <= n //前置条件pre\n\n ensures 1 <= Factorial(n) //后置条件post\n\n{\n if n == 0 then 1 else Factorial(n-1) * n //函数体body\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("要在后置条件中引用函数的结果，请使用"),e("strong",[s._v("函数本身的名称")]),s._v("，如示例中所示。")]),s._v(" "),e("p",[s._v("默认情况下，函数是"),e("code",[s._v("ghost")]),s._v("，不能从可执行（非"),e("code",[s._v("ghost")]),s._v("）代码中调用。")]),s._v(" "),e("p",[s._v("为了使它从ghost变成非ghost，用关键字"),e("code",[s._v("function method")]),s._v("替换 "),e("code",[s._v("function")]),s._v(".")]),s._v(" "),e("p",[s._v("一个返回布尔值的函数可以用关键字声明，然后省略冒号和返回类型。")]),s._v(" "),e("p",[s._v("如果函数或方法被声明为类"),e("code",[s._v("class")]),s._v("成员，则它具有隐式接收器参数 "),e("code",[s._v("this")]),s._v("。可以通过在声明之前加上关键字 "),e("code",[s._v("static")]),s._v(" 来删除此参数。")]),s._v(" "),e("p",[s._v("类 C 中的静态函数 F 可以被 "),e("code",[s._v("C.F(...)")]),s._v(" 调用。")])])}),[],!1,null,null,null);n.default=a.exports}}]);